Index: opencv-git/src/opencv/CMakeLists.txt
===================================================================
--- opencv-git.orig/src/opencv/CMakeLists.txt
+++ opencv-git/src/opencv/CMakeLists.txt
@@ -275,9 +275,9 @@ endif()
 if(ANDROID OR WIN32)
   set(OPENCV_DOC_INSTALL_PATH doc)
 elseif(INSTALL_TO_MANGLED_PATHS)
-  set(OPENCV_DOC_INSTALL_PATH share/OpenCV-${OPENCV_VERSION}/doc)
+  set(OPENCV_DOC_INSTALL_PATH share/doc/opencv-${OPENCV_VERSION})
 else()
-  set(OPENCV_DOC_INSTALL_PATH share/OpenCV/doc)
+  set(OPENCV_DOC_INSTALL_PATH share/doc/opencv)
 endif()
 
 if(WIN32 AND CMAKE_HOST_SYSTEM_NAME MATCHES Windows)
@@ -315,7 +315,7 @@ if(OPENCV_TEST_DATA_PATH AND NOT OPENCV_
   elseif(WIN32)
     set(OPENCV_TEST_DATA_INSTALL_PATH "testdata")
   else()
-    set(OPENCV_TEST_DATA_INSTALL_PATH "share/OpenCV/testdata")
+    set(OPENCV_TEST_DATA_INSTALL_PATH "share/opencv/testdata")
   endif()
 endif()
 
@@ -340,8 +340,8 @@ else()
     set(OPENCV_SAMPLES_SRC_INSTALL_PATH    samples/native)
   else()
     set(OPENCV_LIB_INSTALL_PATH     lib${LIB_SUFFIX})
-    set(OPENCV_3P_LIB_INSTALL_PATH  share/OpenCV/3rdparty/${OPENCV_LIB_INSTALL_PATH})
-    set(OPENCV_SAMPLES_SRC_INSTALL_PATH    share/OpenCV/samples)
+    set(OPENCV_3P_LIB_INSTALL_PATH  share/opencv/3rdparty/${OPENCV_LIB_INSTALL_PATH})
+    set(OPENCV_SAMPLES_SRC_INSTALL_PATH    share/opencv/samples)
   endif()
   set(OPENCV_INCLUDE_INSTALL_PATH "include")
 
@@ -349,7 +349,7 @@ else()
   if(LIB_SUFFIX AND NOT SIZEOF_VOID_P_BITS EQUAL LIB_SUFFIX)
     set(OPENCV_CONFIG_INSTALL_PATH lib${LIB_SUFFIX}/cmake/opencv)
   else()
-    set(OPENCV_CONFIG_INSTALL_PATH share/OpenCV)
+    set(OPENCV_CONFIG_INSTALL_PATH share/opencv)
   endif()
 endif()
 
Index: opencv-git/src/opencv/cmake/OpenCVGenPkgconfig.cmake
===================================================================
--- opencv-git.orig/src/opencv/cmake/OpenCVGenPkgconfig.cmake
+++ opencv-git/src/opencv/cmake/OpenCVGenPkgconfig.cmake
@@ -48,7 +48,7 @@ foreach(CVLib ${OpenCV_LIB_COMPONENTS})
 
   #need better solution....
   if(libpath MATCHES "3rdparty")
-    set(installDir "share/OpenCV/3rdparty/${OPENCV_LIB_INSTALL_PATH}")
+    set(installDir "share/opencv/3rdparty/${OPENCV_LIB_INSTALL_PATH}")
   else()
     set(installDir "${OPENCV_LIB_INSTALL_PATH}")
   endif()
Index: opencv-git/src/opencv/cmake/templates/opencv_run_all_tests_unix.sh.in
===================================================================
--- opencv-git.orig/src/opencv/cmake/templates/opencv_run_all_tests_unix.sh.in
+++ opencv-git/src/opencv/cmake/templates/opencv_run_all_tests_unix.sh.in
@@ -53,7 +53,7 @@ fi
 
 OPENCV_TEST_PATH=@CMAKE_INSTALL_PREFIX@/@OPENCV_TEST_INSTALL_PATH@
 OPENCV_PYTHON_TESTS=@OPENCV_PYTHON_TESTS_LIST@
-export OPENCV_TEST_DATA_PATH=@CMAKE_INSTALL_PREFIX@/share/OpenCV/testdata
+export OPENCV_TEST_DATA_PATH=@CMAKE_INSTALL_PREFIX@/share/opencv/testdata
 
 # Run tests
 
Index: opencv-git/src/opencv/modules/java/CMakeLists.txt
===================================================================
--- opencv-git.orig/src/opencv/modules/java/CMakeLists.txt
+++ opencv-git/src/opencv/modules/java/CMakeLists.txt
@@ -321,7 +321,7 @@ else(ANDROID)
   if(WIN32)
     set(JAR_INSTALL_DIR java)
   else(WIN32)
-    set(JAR_INSTALL_DIR share/OpenCV/java)
+    set(JAR_INSTALL_DIR share/opencv/java)
   endif(WIN32)
   install(FILES ${JAR_FILE} OPTIONAL DESTINATION ${JAR_INSTALL_DIR} COMPONENT java)
 endif(ANDROID)
Index: opencv-git/src/opencv/data/CMakeLists.txt
===================================================================
--- opencv-git.orig/src/opencv/data/CMakeLists.txt
+++ opencv-git/src/opencv/data/CMakeLists.txt
@@ -5,10 +5,10 @@ if(ANDROID)
   install(FILES ${HAAR_CASCADES} DESTINATION sdk/etc/haarcascades COMPONENT libs)
   install(FILES ${LBP_CASCADES}  DESTINATION sdk/etc/lbpcascades  COMPONENT libs)
 else()
-  install(FILES ${HAAR_CASCADES} DESTINATION share/OpenCV/haarcascades COMPONENT libs)
-  install(FILES ${LBP_CASCADES}  DESTINATION share/OpenCV/lbpcascades  COMPONENT libs)
+  install(FILES ${HAAR_CASCADES} DESTINATION share/opencv/haarcascades COMPONENT libs)
+  install(FILES ${LBP_CASCADES}  DESTINATION share/opencv/lbpcascades  COMPONENT libs)
 endif()
 
 if(INSTALL_TESTS AND OPENCV_TEST_DATA_PATH)
   install(DIRECTORY "${OPENCV_TEST_DATA_PATH}/" DESTINATION "${OPENCV_TEST_DATA_INSTALL_PATH}" COMPONENT "tests")
-endif()
\ No newline at end of file
+endif()
